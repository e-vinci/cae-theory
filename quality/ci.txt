1:"$Sreact.fragment"
2:I[909,["110","static/chunks/110-b5064b8e222f3dc7.js","261","static/chunks/261-ec80f02120d23ca6.js","177","static/chunks/app/layout-393b08a65086606c.js"],"default"]
3:I[7468,["110","static/chunks/110-b5064b8e222f3dc7.js","261","static/chunks/261-ec80f02120d23ca6.js","177","static/chunks/app/layout-393b08a65086606c.js"],"ClientThemeProvider"]
4:I[1886,["110","static/chunks/110-b5064b8e222f3dc7.js","261","static/chunks/261-ec80f02120d23ca6.js","177","static/chunks/app/layout-393b08a65086606c.js"],"default"]
5:I[8412,["110","static/chunks/110-b5064b8e222f3dc7.js","261","static/chunks/261-ec80f02120d23ca6.js","177","static/chunks/app/layout-393b08a65086606c.js"],"default"]
6:I[5244,[],""]
7:I[3866,[],""]
8:I[3620,["110","static/chunks/110-b5064b8e222f3dc7.js","261","static/chunks/261-ec80f02120d23ca6.js","177","static/chunks/app/layout-393b08a65086606c.js"],"default"]
a:I[6213,[],"OutletBoundary"]
c:I[6213,[],"MetadataBoundary"]
e:I[6213,[],"ViewportBoundary"]
10:I[4835,[],""]
:HL["/cae-theory/_next/static/css/fd89b796fb218fbf.css","style"]
0:{"P":null,"b":"npg3vfM7YweC0ACTL0a2e","p":"/cae-theory","c":["","quality","ci"],"i":false,"f":[[["",{"children":[["slug","quality/ci","oc"],{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/cae-theory/_next/static/css/fd89b796fb218fbf.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L2",null,{"children":["$","$L3",null,{"children":["$","html",null,{"children":[["$","head",null,{"children":[["$","title",null,{"children":"CAE Course"}],["$","link",null,{"rel":"icon","type":"image/svg+xml","href":"/cae-theory/favicon.svg"}]]}],["$","body",null,{"children":[["$","header",null,{"children":["$","$L4",null,{"siteMetaData":{"version":"","title":"CAE","description":"siteDescription","url":"siteURL","youtubeUrl":"youtubeUrl","authorEmail":"authorEmail","facebookUrl":"facebookUrl","instagramUrl":"instagramUrl","menuLinks":[{"name":"Home","link":"/"},{"name":"Intro","link":"/intro"},{"name":"Qualité","link":"/quality","subMenu":[{"name":"Qualité générale","link":"/quality/general"},{"name":"Qualité du frontend","link":"/quality/frontend"},{"name":"Qualité de l'API","link":"/quality/api"},{"name":"Intégration Continue","link":"/quality/ci"},{"name":"Tests e2e","link":"/quality/e2e"}]},{"name":"About","link":"/about"}]}}]}],["$","$L5",null,{"style":{"padding":"1rem","wordWrap":"break-word"},"children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[],[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","$L8",null,{}]]}]]}]}]}]]}],{"children":[["slug","quality/ci","oc"],["$","$1","c",{"children":[null,["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","$0:f:0:1:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L9",null,["$","$La",null,{"children":"$Lb"}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","FsGmX48eIx6O4ZKqSk33j",{"children":[["$","$Lc",null,{"children":"$Ld"}],["$","$Le",null,{"children":"$Lf"}],null]}]]}],false]],"m":"$undefined","G":["$10","$undefined"],"s":false,"S":true}
11:I[3508,["110","static/chunks/110-b5064b8e222f3dc7.js","75","static/chunks/75-c97a8a7bb0fb66bf.js","340","static/chunks/app/%5B%5B...slug%5D%5D/page-677149b664fe0440.js"],"default"]
12:I[283,["110","static/chunks/110-b5064b8e222f3dc7.js","75","static/chunks/75-c97a8a7bb0fb66bf.js","340","static/chunks/app/%5B%5B...slug%5D%5D/page-677149b664fe0440.js"],"default"]
13:I[6656,["110","static/chunks/110-b5064b8e222f3dc7.js","75","static/chunks/75-c97a8a7bb0fb66bf.js","340","static/chunks/app/%5B%5B...slug%5D%5D/page-677149b664fe0440.js"],"default"]
14:I[8173,["110","static/chunks/110-b5064b8e222f3dc7.js","75","static/chunks/75-c97a8a7bb0fb66bf.js","340","static/chunks/app/%5B%5B...slug%5D%5D/page-677149b664fe0440.js"],""]
15:I[7119,["110","static/chunks/110-b5064b8e222f3dc7.js","75","static/chunks/75-c97a8a7bb0fb66bf.js","340","static/chunks/app/%5B%5B...slug%5D%5D/page-677149b664fe0440.js"],"default"]
16:I[391,["110","static/chunks/110-b5064b8e222f3dc7.js","75","static/chunks/75-c97a8a7bb0fb66bf.js","340","static/chunks/app/%5B%5B...slug%5D%5D/page-677149b664fe0440.js"],"default"]
9:[["$","$L11",null,{"children":[["$","$L12",null,{"aria-label":"breadcrumb","children":[["$","$L13",null,{"href":"/","underline":"hover","color":"inherit","component":"$14","children":" CAE "}],["$","$L13",null,{"href":"/quality","underline":"hover","color":"inherit","component":"$14","children":" Qualité "}],["$","$L13",null,{"href":"#","underline":"hover","color":"inherit","component":"$14","children":" Intégration Continue "}]]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_creer_votre_compte_git_lab","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment créer votre compte GitLab ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_nommer_ses_git_commits","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment nommer ses Git commits ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_nommer_ses_git_branches","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment nommer ses Git branches ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_creer_un_projet_git_lab","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment créer un projet GitLab ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_demarrer_lintegration_continue_de_code_au_sein_de_git_lab","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment démarrer l'intégration continue de code au sein de GitLab ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_mettre_en_place_le_workflow_dintegration_continue","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment mettre en place le workflow d'intégration continue ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_creer_une_merge_request_dans_git_lab","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment créer une merge request dans GitLab ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_mettre_en_place_un_pipeline","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment mettre en place un pipeline ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_revoir_et_fusionner_une_merge_request","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment revoir et fusionner une merge request ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_gerer_des_taches_en_parallele_dans_un_pipeline","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment gérer des tâches en parallèle dans un pipeline ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#comment_sauvegarder_des_rapports_dans_git_lab","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Comment sauvegarder des rapports dans GitLab ? "}]}]}],["$","$L15",null,{"component":"div","sx":{"paddingTop":0,"paddingBottom":0},"children":["$","$L13",null,{"href":"#est_ce_que_lintegration_continue_est_vraiment_utile","underline":"hover","color":"inherit","component":"$14","children":["$","$L16",null,{"primary":" Est-ce que l'intégration continue est vraiment utile ? "}]}]}]]}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_creer_votre_compte_git_lab","children":" Comment créer votre compte GitLab ? "}]}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"👉 CONSIGNE"}]," : Pour les étudiants Vinci, vous devez créer un compte GitLab. Ce paragraphe est donc pour vous."]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Créez un compte sur GitLab en vous rendant sur ",["$","a",null,{"href":"https://GitLab.com/users/sign_up","children":"https://GitLab.com/users/sign_up"}]]}],"\n",["$","li",null,{"children":["Votre ",["$","code",null,{"children":"First name"}]," et ",["$","code",null,{"children":"Last name"}]," : Vous devez indiquer vos vraies informations, notamment votre nom et prénom, pour que vos enseignants puissent vous identifier."]}],"\n",["$","li",null,{"children":["Votre ",["$","code",null,{"children":"Username"}]," doit être : ",["$","code",null,{"children":"vinci-prenom-nom"}]," (sans accent, sans espace, sans majuscule, sans caractères spéciaux). Si ce nom est déjà pris, vous pouvez ajouter l'année en cours à la fin de votre username (",["$","code",null,{"children":"vinci-prenom-nom-2025"}]," par exemple)."]}],"\n",["$","li",null,{"children":["Votre ",["$","code",null,{"children":"Email address"}]," : vous devez indiquer votre adresse email personnelle ",["$","strong",null,{"children":["$","code",null,{"children":"@student.vinci.be"}]}],"!, sinon vous ne pourrez pas obtenir les services gratuits offerts par GitLab Education."]}],"\n",["$","li",null,{"children":["Votre ",["$","code",null,{"children":"Password"}]," : Vous devez choisir un mot de passe sécurisé."]}],"\n",["$","li",null,{"children":"Vous devez confirmer votre adresse email en donnant le code de vérification que vous avez reçu par email."}],"\n",["$","li",null,{"children":["Vous devez ensuite sélectionner un ",["$","code",null,{"children":"Role"}]," et indiquer une réponse pour ",["$","code",null,{"children":"I'm signing up for GitLab because:"}],". Vous pouvez choisir vos réponses."]}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Pour ",["$","strong",null,{"children":["$","code",null,{"children":"What would you like to do?"}]}],", vous devez choisir ",["$","strong",null,{"children":["$","code",null,{"children":"Join a project"}]}],"."]}],"\n",["$","li",null,{"children":["Pour ",["$","strong",null,{"children":["$","code",null,{"children":"Who will be using GitLab?"}]}],", vous devez choisir ",["$","strong",null,{"children":["$","code",null,{"children":"Just me"}]}],"."]}],"\n"]}],"\n",["$","ol",null,{"start":"8","children":["\n",["$","li",null,{"children":["Une fois votre compte GitLab créé, veuillez compléter ce formulaire : ",["$","a",null,{"href":"https://forms.office.com/e/NbJ1caZQGB","children":"https://forms.office.com/e/NbJ1caZQGB"}]]}],"\n"]}],"\n",["$","p",null,{"children":"Pour les étudiants Vinci, afin de simplifier le suivi des groupes par les enseignants, nous vous demandons d'ajouter une photo récente de vous sur votre compte GitLab. Cette photo doit être une photo de vous, de face, sans lunettes de soleil, sans chapeau, sans filtre, sans masque, sans déguisement, sans autre personne, sans animal, sans dessin, sans logo, sans texte, sans arrière-plan, sans flou, sans modification."}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"👉 CONSIGNE"}]," : Pour ajouter une photo à votre compte GitLab, veuillez suivre ces étapes :"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Connectez-vous à votre compte GitLab."}],"\n",["$","li",null,{"children":"Cliquez sur votre avatar en haut à droite."}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Edit profile"}],"."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Choose file..."}]," et choisissez votre image (la taille du fichier ne peut pas dépasser 200 KiB )."]}],"\n"]}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_nommer_ses_git_commits","children":" Comment nommer ses Git commits ? "}]}],"\n",["$","h2",null,{"children":"Introduction"}],"\n",["$","p",null,{"children":"Il existe des conventions pour nommer les commits Git de manière claire et explicite."}],"\n",["$","p",null,{"children":["Le standard le plus couramment utilisé pour nommer les commits est le ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Commits"}]}],". Ce standard fournit un ensemble de règles pour créer un historique de commit explicite, ce qui facilite la lecture et la gestion des versions."]}],"\n",["$","p",null,{"children":["Sa spécification est disponible sur le site officiel : ",["$","a",null,{"href":"https://www.conventionalcommits.org/","children":"https://www.conventionalcommits.org/"}]]}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"👉 CONSIGNE"}]," : les étudiants Vinci doivent appliquer les règles des ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Commits"}]}],"."]}],"\n",["$","h2",null,{"children":"Format de base"}],"\n",["$","p",null,{"children":["Chaque message de commit doit inclure un ",["$","strong",null,{"children":["$","code",null,{"children":"type"}]}],", une option ",["$","strong",null,{"children":["$","code",null,{"children":"scope"}]}]," (portée), et une ",["$","strong",null,{"children":["$","code",null,{"children":"description"}]}]," :"]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"<type>(<scope>): <description>\n"}]}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"type"}]," : le type de la modification (obligatoire)."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"scope"}]," : la portée de la modification (optionnelle). Un scope consiste généralement en un nom de composant ou de module (toute section de votre code) affecté par la modification."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"description"}]," : une brève description de la modification (obligatoire). Cette description doit commencer par une lettre minuscule et ne doit pas se terminer par un point. En anglais, on utilise souvent l'impératif pour décrire l'action effectuée par le commit (",["$","code",null,{"children":"change"}]," et pas ",["$","code",null,{"children":"changed"}]," ni ",["$","code",null,{"children":"changes"}]," par exemple)."]}],"\n"]}],"\n",["$","p",null,{"children":["Pour les ",["$","strong",null,{"children":"breaking changes"}]," (changements qui cassent la compatibilité avec les versions précédentes), on ajoute un ",["$","strong",null,{"children":["$","code",null,{"children":"!"}]}]," après le type et avant la description :"]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"<type>(<scope>)!: <description>\n"}]}]}],"\n",["$","h2",null,{"children":"Types de commits"}],"\n",["$","p",null,{"children":"Les types de commits les plus couramment utilisés sont :"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"feat"}]," : une nouvelle fonctionnalité."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"fix"}]," : une correction de bug."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"docs"}]," : des modifications à la documentation."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"style"}]," : des modifications qui n'affectent pas le sens du code (espaces, formatage, points-virgules manquants, etc.)."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"refactor"}]," : une modification de code qui n'ajoute pas de fonctionnalité et ne corrige pas de bug."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"perf"}]," : une modification de code qui améliore les performances. C'est un type spécial de ",["$","strong",null,{"children":"refactor"}]]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"test"}]," : ajout ou modification de tests."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"build"}]," : des modifications qui affectent le système de build, des dépendances externes (npm, yarn, etc.) ou le CI."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"chore"}]," : des modifications diverses qui n'entrent pas dans les catégories ci-dessus, comme la modification de ",["$","code",null,{"children":".gitignore"}],"."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"revert"}]," : Un commit qui annule un commit précédent."]}],"\n"]}],"\n",["$","h2",null,{"children":"Exemples de commits"}],"\n",["$","p",null,{"children":["Voici quelques exemples de messages de commit conformes aux ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Commits"}]}]," :"]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"feat: add email notifications on new direct messages\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"fix(shopping-cart): prevent order an empty shopping cart\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"feat(api)!: send an email to the customer when a product is shipped\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"build: update dependencies\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"refactor: implement fibonacci number calculation as recursion\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"style: remove empty line\n"}]}]}],"\n",["$","h2",null,{"children":["Pourquoi utiliser les ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Commits"}]}]," ?"]}],"\n",["$","p",null,{"children":["Les ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Commits"}]}]," permettent :"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"d'automatiser la génération de changelogs."}],"\n",["$","li",null,{"children":"de communiquer la nature des modifications aux membres d'une équipe, au public ou à des outils."}],"\n",["$","li",null,{"children":"de faciliter la lecture et la compréhension de l'historique des commits, ce qui aide les gens lorsqu'ils souhaitent contribuer à un projet."}],"\n",["$","li",null,{"children":"d'automatiser le build et le déploiement de projets."}],"\n"]}],"\n",["$","p",null,{"children":["NB : Un changelog est un fichier qui liste toutes les modifications apportées à un projet entre deux versions. Il est généralement utilisé pour informer les utilisateurs des nouvelles fonctionnalités, des corrections de bugs et des changements importants. On peut générer un changelog à partir des messages de commit en utilisant des outils comme ",["$","code",null,{"children":"semantic-release"}]," pour le monde \"JavaScript\" et ",["$","code",null,{"children":"Maven"}]," (avec des plugins spécifiques) pour le monde \"Java\"."]}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_nommer_ses_git_branches","children":" Comment nommer ses Git branches ? "}]}],"\n",["$","h2",null,{"children":"Introduction"}],"\n",["$","p",null,{"children":"Il n'existe pas de standard universel pour nommer les branches Git, mais il existe des conventions largement adoptées qui aident à maintenir un référentiel organisé et compréhensible."}],"\n",["$","p",null,{"children":["Il existe une convention de nommage des branches Git appelée ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Branch"}]}]," qui suit les mêmes principes que les ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Commits"}]}],". Cette convention permet de nommer les branches de manière explicite et structurée."]}],"\n",["$","p",null,{"children":["Sa spécification est disponible sur le site : ",["$","a",null,{"href":"https://conventional-branch.github.io/","children":"https://conventional-branch.github.io/"}]]}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"👉 CONSIGNE"}]," : les étudiants Vinci doivent appliquer les règles de ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Branch"}]}],"."]}],"\n",["$","h2",null,{"children":"Format de base"}],"\n",["$","p",null,{"children":["Chaque nom de branche doit inclure un ",["$","strong",null,{"children":["$","code",null,{"children":"type"}]}]," et une ",["$","strong",null,{"children":["$","code",null,{"children":"description"}]}]," :"]}],"\n",["$","pre",null,{"className":"language-text","children":["$","code",null,{"className":"language-text code-highlight","children":["$","span",null,{"className":"code-line","children":"<type>/<description>\n"}]}]}],"\n",["$","h2",null,{"children":"Types de branches"}],"\n",["$","p",null,{"children":"Les types de branches les plus couramment utilisés sont :"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"main"}]," : pour la branche principale du projet. Elle peut aussi être appelée ",["$","code",null,{"children":"master"}]," ou ",["$","code",null,{"children":"develop"}],"."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"feature"}]," : pour une nouvelle fonctionnalité."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"bugfix"}]," : pour une correction de bug."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"hotfix"}]," : pour des corrections urgentes."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"release"}]," : pour préparer une nouvelle version."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"chore"}]," : pour des tâches non liées directement au code, comme la mise à jour de la documentation, mise à jour des dépendances..."]}],"\n"]}],"\n",["$","h2",null,{"children":"Règles de base"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Les noms de branches doivent être en minuscules et les mots doivent être séparés par des tirets (",["$","strong",null,{"children":["$","code",null,{"children":"-"}]}],", \"hyphens\" en anglais)."]}],"\n",["$","li",null,{"children":"Les noms de branches ne doivent pas contenir d'espaces, de caractères spéciaux ou d'accents."}],"\n",["$","li",null,{"children":"Les noms de branches doivent être courts et descriptifs."}],"\n",["$","li",null,{"children":"Les noms de branches peuvent inclure un identifiant de ticket (par exemple, le numéro d'un ticket Jira ou Trello)."}],"\n"]}],"\n",["$","h2",null,{"children":"Exemples de branches"}],"\n",["$","p",null,{"children":["Voici quelques exemples de noms de branches conformes aux ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Branch"}]}]," :"]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"feature/add-login-page\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"bugfix/fix-header-bug\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"release/v1.2.0\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"chore/update-dependencies\n"}]}]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":["$","span",null,{"className":"code-line","children":"feature/T-123-new-login # Pour un ticket T-123\n"}]}]}],"\n",["$","h2",null,{"children":["Pourquoi utiliser les ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Branch"}]}]," ?"]}],"\n",["$","p",null,{"children":["Les ",["$","strong",null,{"children":["$","code",null,{"children":"Conventional Branch"}]}]," permettent :"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"une communication claire"}]," : le nom d'une branche permet de comprendre rapidement l'objectif de la modification."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"une automatisation simplifiée"}]," : les outils d'intégration continue peuvent utiliser les noms de branches pour déclencher des actions spécifiques."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"une organisation d'équipe efficace"}]," : cela encourage la collaboration au sein d'une équipe en rendant l'objectif de chaque branche clair et compréhensible, permettant à chacun de changer de tâches sans confusion."]}],"\n"]}],"\n",["$","h2",null,{"children":"Faut-il garder les branches après la fusion ?"}],"\n",["$","p",null,{"children":"Non, il est généralement recommandé de supprimer les branches après les avoir fusionnées à la branche principale."}],"\n",["$","p",null,{"children":"Pourquoi supprimer les branches après fusion ?"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Maintenir un référentiel propre"}]," : supprimer les branches fusionnées aide à garder le référentiel propre et organisé. Cela évite l'accumulation de branches obsolètes qui peuvent rendre la navigation dans le référentiel plus difficile."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Éviter la confusion"}]," : la présence de nombreuses branches obsolètes peut prêter à confusion pour les membres de l'équipe. Supprimer les branches fusionnées clarifie quelles branches sont actives et pertinentes."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Encourager les bonnes pratiques"}]," : cela encourage les bonnes pratiques de gestion des branches, telles que la création de nouvelles branches pour chaque fonctionnalité ou correction de bug."]}],"\n"]}],"\n",["$","p",null,{"children":"Quel est l'impact sur l'historique des commits ?"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"l'historique des commits reste intact"}]," : supprimer une branche après fusion n'affecte pas l'historique des commits. Les commits de la branche fusionnée sont intégrés dans la branche principale, et l'historique complet des modifications est conservé."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"les commits restent accessibles"}]," : les commits de la branche fusionnée restent accessibles dans l'historique de la branche principale. Vous pouvez toujours voir les commits individuels et les modifications apportées."]}],"\n"]}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_creer_un_projet_git_lab","children":" Comment créer un projet GitLab  ? "}]}],"\n",["$","p",null,{"children":"Pour réaliser les tutoriels proposé dans ce cours, nous vous recommandons de créer un projet GitLab personnel. Pour cela, vous pouvez suivre les étapes suivantes :"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Cliquez sur l'onglet ",["$","code",null,{"children":"Projects"}]," dans le menu de gauche."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"New project"}]," en haut à droite."]}],"\n",["$","li",null,{"children":["Sélectionnez ",["$","code",null,{"children":"Create blank project"}],"."]}],"\n",["$","li",null,{"children":["Nommez votre projet, par exemple ",["$","code",null,{"children":"cae-theory-tutorials"}],"."]}],"\n",["$","li",null,{"children":["Assurez-vous que le projet est ",["$","code",null,{"children":"Private"}],"."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Create project"}],"."]}],"\n"]}],"\n",["$","p",null,{"children":"Tous les tutoriels associés à l'intégration continue de code dans GitLab sont à réaliser :"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"dans le cadre de votre projet GitLab personnel."}],"\n",["$","li",null,{"children":"dans le cadre de votre projet GitLab associé à votre groupe pour les étudiants Vinci."}],"\n"]}],"\n",["$","p",null,{"children":"Pour les étudiants Vinci, il y a donc un ou une membre d'un groupe qui réalisera les tutoriels sur le projet GitLab associé à son groupe, et les autres membres réaliseront les tutoriels sur leur projet GitLab personnel."}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_demarrer_lintegration_continue_de_code_au_sein_de_git_lab","children":" Comment démarrer l'intégration continue de code au sein de GitLab ? "}]}],"\n",["$","p",null,{"children":"Nous allons dans un premier temps définir ce qu'est l'intégration continue, puis nous verrons comment la mettre en place au sein de GitLab."}],"\n",["$","h2",null,{"children":"Définition de l'intégration continue"}],"\n",["$","p",null,{"children":["L'intégration continue est une pratique de développement logiciel qui consiste à ",["$","strong",null,{"children":"automatiser l'intégration du code produit par les développeurs dans un référentiel partagé"}],". L'objectif est de détecter et de corriger les problèmes d'intégration le plus tôt possible, afin de garantir une qualité de code constante et de faciliter le déploiement continu."]}],"\n",["$","h2",null,{"children":"Mise en place de l'intégration continue avec GitLab"}],"\n",["$","p",null,{"children":"GitLab propose des fonctionnalités intégrées pour mettre en place l'intégration continue de code. Voici les étapes à suivre lorsque l'on souhaite configurer l'intégration continue dans GitLab :"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Protéger la branche principale"}]," : pour éviter les modifications directes sur la branche principale, il est recommandé de protéger la branche ",["$","code",null,{"children":"main"}]," ou ",["$","code",null,{"children":"master"}]," et\nd'exiger des ",["$","em",null,{"children":"merge requests"}]," pour intégrer les modifications."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":["Créer un fichier ",["$","code",null,{"children":".gitlab-ci.yml"}]]}]," : ce fichier contient les instructions pour exécuter les tests, le build et le déploiement du code. Il définit les ",["$","em",null,{"children":"jobs"}]," et les ",["$","em",null,{"children":"stages"}]," à exécuter lors de l'intégration continue."]}],"\n"]}],"\n",["$","p",null,{"children":["Au sein de GitLab, les paramètres pour configurer la protection de la branche principale, la gestion des MR et des builds sont accessibles dans les paramètres du projet, ou dans les paramètres du groupe pour appliquer des règles à plusieurs projets.",["$","br",null,{}],"\n","Pour les étudiants Vinci, ces paramètres ont été configurés par vos enseignants.\nPour pouvoir configurer ces paramètres, vous devez avoir un rôle de ",["$","code",null,{"children":"Maintainer"}]," ou d'",["$","code",null,{"children":"Owner"}]," au niveau du groupe ou projet GitLab."]}],"\n",["$","p",null,{"children":["Lorsque vous créez un projet GitLab, nous vous recommandons de configurer GitLab afin de protéger la branche principale, de configurer les ",["$","em",null,{"children":"merge requests"}]," pour qu'elles soient validées par un autre membre de l'équipe avant d'être fusionnées, et de configurer un pipeline d'intégration continue qui exécute les tests unitaires et vérifie la qualité du code."]}],"\n",["$","p",null,{"children":"Pour les étudiants Vinci, concernant le projet GitLab associé à votre groupe :"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["vos enseignants ont tenté de paramétrer un maximum de règles au niveau du groupe ",["$","code",null,{"children":"2025-cae-projects"}],", puis d'autres règles plus fines au niveau de votre projet GitLab ",["$","code",null,{"children":"cae-group-xy"}]," se trouvant dans le groupe ",["$","code",null,{"children":"2025-cae-projects"}],"."]}],"\n",["$","li",null,{"children":"vous devez avoir créé un compte GitLab en suivant toutes les consignes données ci-dessus."}],"\n",["$","li",null,{"children":["vous recevrez un email confirmant que vous avez été ajouté au projet ",["$","code",null,{"children":" e-vinci / cae-projects / 2025-cae-projects / cae-group-xy"}]," avec le rôle de ",["$","code",null,{"children":"Maintainer"}],"."]}],"\n",["$","li",null,{"children":["ce rôle de ",["$","code",null,{"children":"Maintainer"}]," vous permettra de créer des ",["$","em",null,{"children":"merge requests"}]," et de les fusionner. Vous pouvez également configurer le pipeline d'intégration continue pour exécuter les tests et vérifier la qualité du code.  ",["$","strong",null,{"children":"👉 CONSIGNE"}]," : attention, avec le rôle de ",["$","code",null,{"children":"Maintainer"}],", vous avez la possibilité de configurer les règles de protection de la branche principale, et les règles de ",["$","em",null,{"children":"merge requests"}],". Ces règles ont été configurées par vos enseignants. Nous vous demandons de ne pas les modifier, sauf demande explicite de vos enseignants."]}],"\n"]}],"\n",["$","p",null,{"children":"Pour information, voici les différents rôles disponible dans GitLab :"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Owner"}]," : peut tout faire, y compris supprimer le groupe ou le projet."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Maintainer"}]," : peut tout faire, sauf supprimer le groupe ou le projet. Peut configurer les règles de protection de la branche principale, les règles de ",["$","em",null,{"children":"merge requests"}]," et le pipeline d'intégration continue."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Developer"}]," : peut créer des ",["$","em",null,{"children":"merge requests"}]," et les fusionner, mais ne peut pas configurer les règles de protection de la branche principale ou les règles de ",["$","em",null,{"children":"merge requests"}]," au niveau du groupe ; peut mettre en place et exécuter le pipeline d'intégration continue en ajoutant ou modifiant un fichier ",["$","strong",null,{"children":["$","code",null,{"children":".gitlab-ci.yml"}]}]," à la racine d'un projet GitLab ; ne peut pas configurer le CI/CD via les paramètres du projet et ne peut donc pas ajouter des variables d'environnement !"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Reporter"}]," : peut voir les projets, mais ne peut pas les modifier ; peut créer des issues mais pas des ",["$","em",null,{"children":"merge requests"}]," ; ne peut pas pusher du code."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Planner"}]," : peut voir les projets, mais ne peut pas les modifier ; peut créer des issues mais pas des ",["$","em",null,{"children":"merge requests"}]," ; peut complètement gérer des épics ; ne peut pas pusher du code."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Guest"}]," : rôle le plus restrictif, peut seulement voir les projets ; peut créer des issues, mais pas des ",["$","em",null,{"children":"merge requests"}]," ; ne peut pas pusher du code."]}],"\n"]}],"\n",["$","p",null,{"children":["Pour les détails sur les permissions associées à chaque rôle, vous pouvez consulter la documentation officielle de GitLab : ",["$","a",null,{"href":"https://docs.gitlab.com/ee/user/permissions.html","children":"https://docs.gitlab.com/ee/user/permissions.html"}]]}],"\n",["$","p",null,{"children":["Les prochaines sections expliquent, étape par étape, comment configurer l'intégration continue dans GitLab si vous aviez un rôle de ",["$","code",null,{"children":"Maintainer"}]," ou d'",["$","code",null,{"children":"Owner"}]," au niveau d'un groupe GitLab ou d'un projet GitLab."]}],"\n",["$","h2",null,{"children":"🍬 Protection de la branche principale au niveau d'un groupe"}],"\n",["$","p",null,{"children":["Pour les étudiants Vinci, vous n'avez pas de groupe à configurer. Ce paragraphe est donc pour compréhension uniquement du rôle d'un ",["$","code",null,{"children":"Maintainer"}]," ou d'un ",["$","code",null,{"children":"Owner"}]," au niveau d'un groupe GitLab."]}],"\n",["$","p",null,{"children":"Pour protéger la branche principale au niveau d'un groupe GitLab, vous pouvez suivre les étapes suivantes :"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Accédez aux paramètres du projet dans GitLab (",["$","code",null,{"children":"Settings"}],")."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Repository"}]," dans le menu de gauche."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Default branch"}],"."]}],"\n",["$","li",null,{"children":["La branche principale est ",["$","code",null,{"children":"main"}]," par défaut (il n'y a rien à changer)"]}],"\n",["$","li",null,{"children":["Assurez que l'option ",["$","code",null,{"children":"Protected"}]," est activée."]}],"\n",["$","li",null,{"children":["Cochez les options :","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["Allowed to push : ",["$","code",null,{"children":"No one"}]]}],"\n",["$","li",null,{"children":["Allowed to merge : ",["$","code",null,{"children":"Developers + Maintainers"}],"."]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Save changes"}],"."]}],"\n"]}],"\n",["$","p",null,{"children":["Ainsi, les développeurs ne pourront pas pousser directement sur la branche principale, mais devront passer par des ",["$","em",null,{"children":"merge requests"}],"."]}],"\n",["$","h2",null,{"children":"🍬 Meilleure gestion des MR au niveau d'un groupe"}],"\n",["$","p",null,{"children":["Pour les étudiants Vinci, vous n'avez pas de groupe à configurer. Ce paragraphe est donc pour compréhension uniquement du rôle d'un ",["$","code",null,{"children":"Maintainer"}]," ou d'un ",["$","code",null,{"children":"Owner"}]," au niveau d'un groupe GitLab."]}],"\n",["$","p",null,{"children":["Vous pouvez configurer les ",["$","em",null,{"children":"merge requests"}]," au niveau d'un groupe GitLab pour appliquer des règles à plusieurs projets. Voici comment configurer les ",["$","em",null,{"children":"merge requests"}]," au niveau d'un groupe :"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Accédez aux paramètres du projet dans GitLab (",["$","code",null,{"children":"Settings"}],")."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"General"}]," dans le menu de gauche."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Merge requests"}],"."]}],"\n",["$","li",null,{"children":["Cochez l'option ",["$","code",null,{"children":"Pipelines must succeed"}]," : ",["$","code",null,{"children":"Merge requests can't be merged if the latest pipeline did not succeed or is still running."}],"."]}],"\n",["$","li",null,{"children":["Cochez l'option ",["$","code",null,{"children":"All threads must be resolved"}],"."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Save changes"}],"."]}],"\n"]}],"\n",["$","p",null,{"children":["Ainsi, les ",["$","em",null,{"children":"merge requests"}]," ne pourront pas être fusionnées si le pipeline d'intégration continue a échoué ou si tous les threads n'ont pas été résolus."]}],"\n",["$","h2",null,{"children":"Configuration de votre projet sous GitLab"}],"\n",["$","p",null,{"children":"Pour les étudiants Vinci, le projet GitLab associé à votre groupe n'est pas à configurer, car cela a été fait par vos enseignants."}],"\n",["$","p",null,{"children":"Par contre, pour votre projet GitLab personnel, nous vous recommandons de réaliser ces tâches de configuration pour vous familiariser avec les paramètres de GitLab."}],"\n",["$","h3",null,{"children":"Protection de la branche principale"}],"\n",["$","p",null,{"children":"Pour protéger la branche principale, vous ne devez normalement rien changer si vous avez créé votre projet dans un groupe où vous avez déjà protégé la branche principale."}],"\n",["$","p",null,{"children":"Dans le cadre d'une projet GitLab personnel, pour protéger la branche principale, vous pouvez suivre les étapes suivantes :"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Accédez aux paramètres du projet dans GitLab (",["$","code",null,{"children":"Settings"}],")."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Repository"}]," dans le menu de gauche."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Protected branches"}],"."]}],"\n",["$","li",null,{"children":["La branche principale est ",["$","code",null,{"children":"main"}]," par défaut (il n'y a rien à changer)"]}],"\n",["$","li",null,{"children":["Assurez que cela est sélectionné : ",["$","code",null,{"children":"Protect this branch"}],".","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"Allowed to merge"}]," : ",["$","code",null,{"children":"Developers + Maintainers"}],"."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"Allowed to push and merge"}]," : ",["$","code",null,{"children":"No one"}]]}],"\n"]}],"\n"]}],"\n"]}],"\n",["$","p",null,{"children":["Ainsi, les développeurs ne pourront pas pousser directement sur la branche principale, mais devront passer par des ",["$","em",null,{"children":"merge requests"}],"."]}],"\n",["$","h3",null,{"children":"Meilleure gestion des MR"}],"\n",["$","h4",null,{"children":"Historique des commits plus propre"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Accédez aux paramètres du projet dans GitLab (",["$","code",null,{"children":"Settings"}],")."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Merge requests"}]," dans le menu de gauche."]}],"\n",["$","li",null,{"children":["Cochez l'option ",["$","code",null,{"children":"Fast-forward merge"}],". ",["$","code",null,{"children":"Fast-forward merges only. When there is a merge conflict, the user is given the option to rebase. If merge trains are enabled, merging is only possible if the branch can be rebased without conflicts."}]]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"Squash commits when merging"}]," : Sélectionnez ",["$","code",null,{"children":"Do not allow"}],". ",["$","code",null,{"children":"Squashing is never performed and the checkbox is hidden."}]]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Save changes"}],"."]}],"\n"]}],"\n",["$","h4",null,{"children":"Fusion des MR"}],"\n",["$","p",null,{"children":["Si applicable, nous allons configurer les checks qui doivent être validés avant de pouvoir fusionner une ",["$","em",null,{"children":"merge request"}],"."]}],"\n",["$","p",null,{"children":"Pour les étudiants Vinci et concernant leur projet GitLab associé à leur groupe, cela a été configuré par vos enseignants."}],"\n",["$","p",null,{"children":["Concernant votre projet GitLab personnel, si vous avez configuré la gestion des MR au niveau d'un groupe, vous n'avez pas besoin de le refaire au niveau du projet.",["$","br",null,{}],"\n","Si vous n'avez pas configuré la gestion des MR au niveau d'un groupe, vous pouvez configurer les ",["$","em",null,{"children":"merge requests"}]," au niveau de votre projet GitLab :"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Accédez aux paramètres du projet dans GitLab (",["$","code",null,{"children":"Settings"}],")."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Merge requests"}]," dans le menu de gauche."]}],"\n",["$","li",null,{"children":["Cochez l'option ",["$","code",null,{"children":"Pipelines must succeed"}]," : ",["$","code",null,{"children":"Merge requests can't be merged if the latest pipeline did not succeed or is still running."}],"."]}],"\n",["$","li",null,{"children":["Cochez l'option ",["$","code",null,{"children":"All threads must be resolved"}],"."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Save changes"}],"."]}],"\n"]}],"\n",["$","h4",null,{"children":"Approbation des MR"}],"\n",["$","p",null,{"children":["Pour pouvoir configurer les règles d'approbation des ",["$","em",null,{"children":"merge requests"}],", il faut avoir un plan tarifaire payant sur GitLab.com. Il est possible de tester cette fonctionnalité avec un essai gratuit de 60 jours. Néanmoins, pour suivre ce cours théorique, vous n'avez pas besoin de cette fonctionnalité.\nPlus d'info sur l'essai possible de GitLab Ultimate : ",["$","a",null,{"href":"https://about.gitlab.com/free-trial/","children":"https://about.gitlab.com/free-trial/"}]]}],"\n",["$","p",null,{"children":"Notons que pour les étudiants Vinci, le projet GitLab associé à votre groupe n'est pas à configurer, car cela a été fait par vos enseignants."}],"\n",["$","p",null,{"children":["Si vous aviez un compte Ultimate, voici comment vous pourriez configurer les règles d'approbation des ",["$","em",null,{"children":"merge requests"}]," :"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":["Accédez aux paramètres du projet dans GitLab (",["$","code",null,{"children":"Settings"}],")."]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Merge requests"}]," dans le menu de gauche."]}],"\n",["$","li",null,{"children":["Veuillez ajouter au moins un membre de votre équipe pour approuver les ",["$","em",null,{"children":"merge requests"}]," :\n",["$","code",null,{"children":"Approval required"}]," : ",["$","code",null,{"children":"1"}]," (ou plus si vous le souhaitez)"]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Save changes"}],"."]}],"\n"]}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_mettre_en_place_le_workflow_dintegration_continue","children":" Comment mettre en place le workflow d'intégration continue ? "}]}],"\n",["$","h2",null,{"children":"Introduction"}],"\n",["$","p",null,{"children":"Voici un premier workflow que nous souhaitons appliquer pour l'intégration continue de code dans GitLab :"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Un développeur crée une nouvelle feature branche à partir de la branche principale."}],"\n",["$","li",null,{"children":"Le développeur travaille sur sa feature et pousse ses modifications sur la branche distante."}],"\n",["$","li",null,{"children":["Le développeur crée une ",["$","em",null,{"children":"merge request"}]," pour fusionner sa branche avec la branche principale."]}],"\n",["$","li",null,{"children":["Un autre membre de l'équipe approuve la ",["$","em",null,{"children":"merge request"}],"."]}],"\n"]}],"\n",["$","p",null,{"children":"Nous allons commencer par ajouter le boilerplate d'une API Spring à votre projet GitLab."}],"\n",["$","h2",null,{"children":"Clonage de votre projet GitLab personnel"}],"\n",["$","p",null,{"children":"Veuillez cloner votre projet GitLab personnel sur votre machine locale."}],"\n",["$","p",null,{"children":"Pour cloner votre projet GitLab, vous pouvez utiliser la commande suivante :"}],"\n",["$","pre",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," clone https://gitlab.com/",["$","span",null,{"className":"token operator","children":"<"}],"votre-username-GitLab",["$","span",null,{"className":"token operator","children":">"}],"/",["$","span",null,{"className":"token operator","children":"<"}],"nom-du-projet",["$","span",null,{"className":"token operator","children":">"}],".git\n"]}]}]}],"\n",["$","p",null,{"children":"S'il y a un souci avec cette commande (par exemple si vous aviez un autre profil GitLab qui serait dans le cache de Git), vous pouvez utiliser la commande suivante :"}],"\n",["$","pre",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," clone https://",["$","span",null,{"className":"token operator","children":"<"}],"votre-username-GitLab",["$","span",null,{"className":"token operator","children":">"}],"@gitlab.com/",["$","span",null,{"className":"token operator","children":"<"}],"votre-username-GitLab",["$","span",null,{"className":"token operator","children":">"}],"/",["$","span",null,{"className":"token operator","children":"<"}],"nom-du-projet",["$","span",null,{"className":"token operator","children":">"}],".git\n"]}]}]}],"\n",["$","p",null,{"children":"Vous pouvez utiliser les commandes suivantes pour bien configurer votre compte GitLab sur votre machine locale :"}],"\n",["$","pre",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," config user.name ",["$","span",null,{"className":"token string","children":"\"<votre-username-GitLab>\""}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," config user.email ",["$","span",null,{"className":"token string","children":"\"<votre-email>@student.vinci.be\""}],"\n"]}]]}]}],"\n",["$","h2",null,{"children":"Clonage de votre projet GitLab associé à votre groupe"}],"\n",["$","p",null,{"children":"Cette section est pour les étudiants Vinci uniquement."}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"👉 CONSIGNE"}]," : Pour les étudiants Vinci, veuillez cloner votre projet GitLab sur votre machine locale."]}],"\n",["$","p",null,{"children":"Pour vous assurer que vous clonez votre projet GitLab avec votre nouveau compte GitLab, nous vous recommandons cette commande :"}],"\n",["$","pre",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," clone https://",["$","span",null,{"className":"token operator","children":"<"}],"votre-username-GitLab",["$","span",null,{"className":"token operator","children":">"}],"@GitLab.com/e-vinci/cae-projects/2025-cae-projects/cae-group-",["$","span",null,{"className":"token operator","children":"<"}],"xy",["$","span",null,{"className":"token operator","children":">"}],".git\n"]}]}]}],"\n",["$","p",null,{"children":["En clonant votre projet GitLab avec votre nouveau compte GitLab, vous vous assurez que vous avez les droits nécessaires pour pousser vos modifications sur votre projet GitLab. Git va ajouter une remote ",["$","code",null,{"children":"origin"}]," avec votre nouveau compte GitLab.",["$","br",null,{}],"\n","NB : une ",["$","code",null,{"children":"remote"}]," est un raccourci pour une URL Git. C'est un moyen pratique de ne pas avoir à taper l'URL complète à chaque fois que vous voulez pousser ou tirer des modifications."]}],"\n",["$","p",null,{"children":["Si vous avez plusieurs comptes ",["$","code",null,{"children":"GitLab.com"}]," sur votre machine, veuillez vous assurer que les informations d'identification de votre nouveau compte GitLab sont utilisées :"]}],"\n",["$","pre",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token builtin class-name","children":"cd"}]," cae-group-",["$","span",null,{"className":"token operator","children":"<"}],"xy",["$","span",null,{"className":"token operator","children":">"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," config ",["$","span",null,{"className":"token parameter variable","children":"--get"}]," user.name\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," config ",["$","span",null,{"className":"token parameter variable","children":"--get"}]," user.email\n"]}]]}]}],"\n",["$","p",null,{"children":"Si vous avez besoin de changer ces informations, vous pouvez utiliser les commandes suivantes :"}],"\n",["$","pre",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," config user.name ",["$","span",null,{"className":"token string","children":"\"<votre-username-GitLab>\""}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," config user.email ",["$","span",null,{"className":"token string","children":"\"<votre-email>@student.vinci.be\""}],"\n"]}]]}]}],"\n",["$","h2",null,{"children":"Ajout du boilerplate de votre API Spring"}],"\n",["$","p",null,{"children":"Pour rappel, tous les tutoriels associés à l'intégration continue de code dans GitLab sont à réaliser :"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"dans le cadre de votre projet GitLab personnel."}],"\n",["$","li",null,{"children":"dans le cadre de votre projet GitLab associé à votre groupe pour les étudiants Vinci."}],"\n"]}],"\n",["$","p",null,{"children":"Pour les étudiants Vinci, il y a donc un ou une membre d'un groupe qui réalisera les tutoriels sur le projet GitLab associé à son groupe, et les autres membres réaliseront les tutoriels sur leur projet GitLab personnel."}],"\n",["$","p",null,{"children":["Vous devriez créer une nouvelle branche à partir de la branche principale pour ajouter le boilerplate de votre API Spring. Nous vous proposons de l'appeler ",["$","code",null,{"children":"chore/setup-api-boilerplate"}],"."]}],"\n",["$","p",null,{"children":["NB : Voici un exemple de commandes pour créer une nouvelle branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}]," à partir de la branche principale :"]}],"\n",["$","pre",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," checkout main\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," pull\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," checkout ",["$","span",null,{"className":"token parameter variable","children":"-b"}]," chore/setup-api-boilerplate\n"]}]]}]}],"\n",["$","p",null,{"children":["Pour l'ajout du boilerplate de votre API Spring, vous devez avoir fait tous les tutoriels qui sont demandés dans la page ",["$","a",null,{"href":"../quality/api","children":"Qualité de l'API"}],"."]}],"\n",["$","p",null,{"children":["Le boilerplate de votre API Spring doit être ajouté à la racine de votre projet GitLab, dans un dossier nommé ",["$","strong",null,{"children":["$","code",null,{"children":"api"}]}],".\nSi vous avez suivi les tutoriels, vous devriez avoir un projet Spring Boot avec les dépendances nécessaires pour démarrer votre API. En cas de souci, vous pouvez utiliser le dossier ",["$","code",null,{"children":"api"}]," fourni dans ce repository : ",["$","a",null,{"href":"https://github.com/e-vinci/cae-project-boilerplate","children":"cae-project-boilerplate"}],"."]}],"\n",["$","p",null,{"children":["Pensez à ajouter un fichier ",["$","code",null,{"children":".gitignore"}]," à la racine de votre projet (votre repository) pour ignorer les fichiers inutiles."]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":[["$","span",null,{"className":"code-line","children":"### Mac\n"}],["$","span",null,{"className":"code-line","children":".DS_Store\n"}],["$","span",null,{"className":"code-line","children":"### Windows\n"}],["$","span",null,{"className":"code-line","children":"Thumbs.db\n"}],["$","span",null,{"className":"code-line","children":"### Linux\n"}],["$","span",null,{"className":"code-line","children":"lost+found\n"}],["$","span",null,{"className":"code-line","children":".env\n"}],["$","span",null,{"className":"code-line","children":"*.env\n"}]]}]}],"\n",["$","p",null,{"children":["Après avoir fait ces modifications, vous devez pousser votre branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}]," (pensez à faire un commit auparavant ; ) sur votre repo distant (qui est votre projet GitLab)."]}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_creer_une_merge_request_dans_git_lab","children":" Comment créer une merge request dans GitLab ? "}]}],"\n",["$","p",null,{"children":["Sur votre projet GitLab, vous devriez voir un bouton ",["$","code",null,{"children":"Create merge request"}]," pour créer une ",["$","em",null,{"children":"merge request"}],"."]}],"\n",["$","p",null,{"children":["Veuillez compléter le formulaire de ",["$","em",null,{"children":"merge request"}]," en indiquant les informations suivantes :"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"Title"}]," : ",["$","code",null,{"children":"Ajout du boilerplate de l'API Spring"}]]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Description"}]," : ",["$","code",null,{"children":"Ajout du boilerplate de l'API Spring."}]]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Assign to"}]," : ",["$","code",null,{"children":"Assign to me"}]]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Reviewers"}]," : Si vous êtes dans le cadre d'un projet GitLab associé à un groupe, sélectionnez un membre de votre équipe pour approuver la ",["$","em",null,{"children":"merge request"}],". Pour les étudiants Vinci, vous pouvez sélectionner un autre membre de votre groupe.  Si vous ête dans un projet GitLab personnel, vous pouvez laisser cette option vide.  Dans le cadre d'un projet GitLab personnel, si vous souhaiter jouer le jeu jusqu'au bout, vous pouvez ajouter un nouveau membre à votre projet GitLab (",["$","code",null,{"children":"Manage"}],", ",["$","code",null,{"children":"Members"}],", ",["$","code",null,{"children":"Invite members"}],"). Vous pouvez ensuite mettre à jour votre MR pour ajouter ce nouveau membre en tant que ",["$","code",null,{"children":"Reviewer"}],"."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Merge options"}]," :","\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"Delete source branch when merge request is accepted."}]," : Cochez cette option pour supprimer la branche ",["$","code",null,{"children":"feature/setup-api-boilerplate"}]," après la fusion. On garde malgré tout l'historique complet des commits."]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["Cliquez sur ",["$","code",null,{"children":"Create merge request"}],"."]}],"\n"]}],"\n",["$","p",null,{"children":["Comme nous n'avons pas encore configuré le pipeline d'intégration continue pour exécuter les tests et vérifier la qualité du code, il n'est pas possible de fusionner la ",["$","em",null,{"children":"merge request"}]," pour le moment, même si un autre membre de l'équipe l'approuve."]}],"\n",["$","p",null,{"children":["Vous souhaitez en savoir plus sur comment créer une Merge Request ? ",["$","a",null,{"href":"https://docs.GitLab.com/ee/user/project/merge_requests/creating_merge_requests.html","children":"Voir la documentation"}],"."]}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_mettre_en_place_un_pipeline","children":" Comment mettre en place un pipeline ? "}]}],"\n",["$","h2",null,{"children":"C'est quoi un pipeline ?"}],"\n",["$","p",null,{"children":["Un pipeline est un ensemble de ",["$","strong",null,{"children":"jobs"}]," qui sont exécutés dans un ordre spécifique pour automatiser le processus de construction, de test et de déploiement d'une application."]}],"\n",["$","p",null,{"children":"Nous allons voir comment configurer un pipeline dans GitLab pour exécuter les tests unitaires et vérifier la qualité du code de notre API."}],"\n",["$","h2",null,{"children":"Configuration du pipeline"}],"\n",["$","p",null,{"children":["Pour configurer un pipeline dans GitLab, vous devez créer un fichier ",["$","strong",null,{"children":["$","code",null,{"children":".gitlab-ci.yml"}]}]," à la racine de votre projet. Ce fichier contient les instructions pour exécuter les différents jobs du pipeline."]}],"\n",["$","p",null,{"children":["A la racine de votre Projet GitLab (dans votre repository local), dans la branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}],", créez un fichier ",["$","strong",null,{"children":["$","code",null,{"children":".gitlab-ci.yml"}]}]," avec le contenu suivant :"]}],"\n",["$","pre",null,{"className":"language-yaml","children":["$","code",null,{"className":"language-yaml code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token key atrule","children":"api test"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token key atrule","children":"image"}],["$","span",null,{"className":"token punctuation","children":":"}]," maven",["$","span",null,{"className":"token punctuation","children":":"}],"3.9.9",["$","span",null,{"className":"token punctuation","children":"-"}],"amazoncorretto",["$","span",null,{"className":"token punctuation","children":"-"}],["$","span",null,{"className":"token number","children":"21"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token key atrule","children":"script"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," cd api\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," mvn clean test\n"]}]]}]}],"\n",["$","p",null,{"children":["Ce fichier définit un job nommé ",["$","code",null,{"children":"api test"}]," qui utilise l'image Docker ",["$","code",null,{"children":"maven:3.9.9-amazoncorretto-21"}]," pour exécuter les tests unitaires de l'API Spring. Le script exécute les commandes suivantes :"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","code",null,{"children":"cd api"}]," : se déplace dans le dossier ",["$","code",null,{"children":"api"}]," où se trouve le code de l'API Spring."]}],"\n",["$","li",null,{"children":[["$","code",null,{"children":"mvn clean test"}]," : exécute tous les checks que nous avons configurés dans l'API Spring. Il s'agit du Checkstyle, du PMD, du CPD et des tests unitaires."]}],"\n"]}],"\n",["$","p",null,{"children":["Veuillez pousser votre fichier ",["$","strong",null,{"children":["$","code",null,{"children":".gitlab-ci.yml"}]}]," sur votre dépôt distant."]}],"\n",["$","p",null,{"children":"Dans le cadre d'un compte GitLab personnel, il est possible que vous deviez d'abord vérifier votre compte GitLab avant d'avoir le droit d'exécuter une pipeline. Pour cela, veuillez suivre les instructions demandées sur votre projet GitLab."}],"\n",["$","p",null,{"children":["Pour relancer un build, veuillez simplement pousser un nouveau commit sur votre branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}],"."]}],"\n",["$","p",null,{"children":["Maintenant que vous avez ajouté le fichier ",["$","strong",null,{"children":["$","code",null,{"children":".gitlab-ci.yml"}]}],", vous devriez voir un pipeline se déclencher automatiquement à chaque ",["$","em",null,{"children":"push"}]," sur la branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}],"."]}],"\n",["$","h2",null,{"children":"Vérification du pipeline"}],"\n",["$","p",null,{"children":["Pour vérifier que le pipeline a été exécutée avec succès, vous pouvez accéder à l'onglet ",["$","code",null,{"children":"Build"}],", ",["$","code",null,{"children":"Pipelines"}]," de votre projet GitLab."]}],"\n",["$","p",null,{"children":["Là, vous devriez voir un pipeline avec le job ",["$","code",null,{"children":"api test"}]," qui a été exécuté avec succès ou qui est toujours en cours."]}],"\n",["$","p",null,{"children":["Si vous cliquez sur le numéro du pipeline, vous pouvez voir les détails de l'exécution du job ",["$","code",null,{"children":"api test"}],". Puis vous pouvez voir les logs de l'exécution du job. On voit ici que tous les tests ont exécutés avec succès et que le build est réussi."]}],"\n",["$","p",null,{"children":["Nous pensons donc que la qualité du commit est bonne et qu'il devrait être possible de fusionner la branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}]," avec la branche principale."]}],"\n",["$","p",null,{"children":"Cependant, il est important de demander à un autre membre de l'équipe de vérifier le code avant de fusionner la branche. Car il est possible que même si la pipeline est réussie, il y ait des erreurs dans le code que seul un humain peut détecter."}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_revoir_et_fusionner_une_merge_request","children":" Comment revoir et fusionner une merge request ?  "}]}],"\n",["$","h2",null,{"children":["Revue et approbation de la ",["$","em",null,{"children":"merge request"}]]}],"\n",["$","p",null,{"children":["Veuillez demander à un autre membre de votre équipe, généralement à la personne que vous avez assigné comme ",["$","code",null,{"children":"Reviewer"}]," à la création de la ",["$","em",null,{"children":"merge request"}]," (MR), de revoir et d'approuver votre MR."]}],"\n",["$","p",null,{"children":["En résumé, pour revoir et approuver une ",["$","em",null,{"children":"merge request"}],", vous devriez :"]}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Accéder à la MR."}],"\n",["$","li",null,{"children":"Vérifier que le pipeline a été exécuté avec succès. Si ça n'est pas le cas, demander au créateur de la MR de corriger les erreurs."}],"\n",["$","li",null,{"children":["Regarder les modifications apportées par la MR via l'onglet ",["$","code",null,{"children":"Commits"}]," et l'onglet ",["$","code",null,{"children":"Changes"}],"."]}],"\n",["$","li",null,{"children":"Si vous avez des remarques :"}],"\n"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["vous pouvez les ajouter dans l'onglet ",["$","code",null,{"children":"Changes"}],". Pour chaque fichier modifié, vous pouvez ajouter des commentaires sur des lignes spécifiques."]}],"\n",["$","li",null,{"children":["vous pouvez ajouter des commentaires généraux dans l'onglet ",["$","code",null,{"children":"Overview"}]," de la MR."]}],"\n",["$","li",null,{"children":"vous devez atteindre que le créateur de la MR corrige les erreurs avant d'approuver la MR. Pour cela, le créateur de la MR doit pousser de nouveaux commits sur la branche de la MR."}],"\n",["$","li",null,{"children":["vous pouvez revoir les nouveaux commits en cliquant sur le bouton ",["$","code",null,{"children":"Commits"}]," de la MR. N'hésitez pas à ajouter des commentaires sur des lignes spécifiques si nécessaire..."]}],"\n"]}],"\n",["$","ol",null,{"start":"5","children":["\n",["$","li",null,{"children":["Approuver la MR en cliquant sur le bouton ",["$","code",null,{"children":"Approve"}]," une fois qu'il n'y a plus de commentaires ouverts."]}],"\n"]}],"\n",["$","h2",null,{"children":["Fusion de la branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}]," avec la branche principale"]}],"\n",["$","p",null,{"children":["Maintenant que le pipeline a été exécutée avec succès et que la MR a été acceptée par le ",["$","code",null,{"children":"Reviewer"}],", vous pouvez fusionner la branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}]," avec la branche principale. Pour cela, il suffit que le créateur de la MR clique sur le bouton ",["$","code",null,{"children":"Merge"}],"."]}],"\n",["$","p",null,{"children":"Attention, une fois la MR fusionnée, un nouveau pipeline sera déclenché pour la branche principale. Vous devez vous assurer que ce pipeline est exécuté avec succès avant de continuer."}],"\n",["$","h2",null,{"children":["Terminer la fusion de la branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}]," avec la branche principale"]}],"\n",["$","p",null,{"children":["Tout est bien géré sur le GitLab distant.\nIl reste à terminer la fusion de la branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}]," avec la branche principale sur votre machine locale.",["$","br",null,{}],"\n","Pour ce faire, vous devez vous placer sur la branche principale et récupérer les dernières modifications. Par exemple, si vous êtes sur la branche ",["$","code",null,{"children":"chore/setup-api-boilerplate"}],", vous pouvez exécuter les commandes suivantes :"]}],"\n",["$","pre",null,{"className":"language-bash","children":["$","code",null,{"className":"language-bash code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," checkout main\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"git"}]," pull\n"]}]]}]}],"\n",["$","p",null,{"children":"Attention, le git pull n'est possible que si le pipeline de la branche principale est vert."}],"\n",["$","h2",null,{"children":"Résumé du workflow actuel pour l'intégration continue"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":"Un développeur crée une nouvelle feature branche à partir de la branche principale."}],"\n",["$","li",null,{"children":"Le développeur travaille sur sa feature et pousse ses modifications sur la branche distante."}],"\n",["$","li",null,{"children":"Le pipeline d'intégration continue est déclenché automatiquement. Si le pipeline échoue, le développeur doit corriger les erreurs avant de continuer."}],"\n",["$","li",null,{"children":["Le développeur crée une ",["$","em",null,{"children":"MR"}]," pour fusionner sa branche avec la branche principale et lui assigne un ",["$","code",null,{"children":"Reviewer"}],"."]}],"\n",["$","li",null,{"children":["Un autre membre de l'équipe, le ",["$","code",null,{"children":"Reviewer"}],", fait une review des modifications et approuve la ",["$","em",null,{"children":"MR"}]," seulement s'il n'a plus de remarques. Tant qu'il y a des remarques, le développeur (le créateur de la MR) doit corriger les erreurs et pousser de nouveaux commits."]}],"\n",["$","li",null,{"children":["La ",["$","em",null,{"children":"MR"}]," est fusionnée avec la branche principale."]}],"\n"]}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_gerer_des_taches_en_parallele_dans_un_pipeline","children":" Comment gérer des tâches en parallèle dans un pipeline ? "}]}],"\n",["$","h2",null,{"children":"Introduction"}],"\n",["$","p",null,{"children":"Comment gérer des tâches en parallèle dans un pipeline ? Par exemple, comment exécuter les tests du frontend et de l'API en parallèle dans un pipeline ?"}],"\n",["$","p",null,{"children":"En fait, dans GitLab, vous pouvez définir plusieurs jobs dans un pipeline et les exécuter en parallèle."}],"\n",["$","p",null,{"children":"Si vous avez plusieurs jobs qui ne dépendent pas les uns des autres, vous pouvez les exécuter en parallèle pour gagner du temps."}],"\n",["$","p",null,{"children":"Nous allons donc ajouter notre frontend React dans le pipeline et exécuter les tests du frontend et de l'API en parallèle."}],"\n",["$","h2",null,{"children":"Ajout du boilerplate de votre frontend"}],"\n",["$","p",null,{"children":["Pour l'ajout du boilerplate de votre frontend à votre projet GitLab, vous devez avoir fait tout ce qui est demandé dans la page ",["$","a",null,{"href":"../quality/frontend","children":"Qualité du Frontend"}],".\nA la fin de ces tutoriels (le dernier s'appelle ",["$","code",null,{"children":"unit-tests"}],"), vous devriez avoir un projet React avec les dépendances nécessaires pour démarrer un frontend. Néanmoins, ce frontend n'intègre pas la librairie MUI."]}],"\n",["$","p",null,{"children":["Pour vous aider, nous avons créé un boilerplate pour le frontend qui reprend les tutoriels précédents et qui intègre la librairie MUI. Vous pouvez le trouver ici : ",["$","a",null,{"href":"https://github.com/e-vinci/cae-project-boilerplate/tree/main/frontend","children":"frontend du cae-project-boilerplate"}],"."]}],"\n",["$","p",null,{"children":["Vous devriez créer une nouvelle branche à partir de la branche principale pour ajouter le boilerplate de votre frontend React dans un dossier nommé ",["$","strong",null,{"children":["$","code",null,{"children":"/frontend"}]}],". Nous vous proposons d'appeler votre nouvelle branche ",["$","code",null,{"children":"chore/setup-frontend-boilerplate"}],"."]}],"\n",["$","h2",null,{"children":"Mise à jour du pipeline"}],"\n",["$","p",null,{"children":["Veuillez mettre à jour votre fichier ",["$","code",null,{"children":".gitlab-ci.yml"}]," pour exécuter les tests du frontend et de l'API en parallèle :"]}],"\n",["$","pre",null,{"className":"language-yaml","children":["$","code",null,{"className":"language-yaml code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token key atrule","children":"api test"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token key atrule","children":"image"}],["$","span",null,{"className":"token punctuation","children":":"}]," maven",["$","span",null,{"className":"token punctuation","children":":"}],"3.9.9",["$","span",null,{"className":"token punctuation","children":"-"}],"amazoncorretto",["$","span",null,{"className":"token punctuation","children":"-"}],["$","span",null,{"className":"token number","children":"21"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token key atrule","children":"script"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," cd api\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," mvn clean test\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line highlight-line","children":[["$","span",null,{"className":"token key atrule","children":"frontend test"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line highlight-line","children":["  ",["$","span",null,{"className":"token key atrule","children":"image"}],["$","span",null,{"className":"token punctuation","children":":"}]," node",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token number","children":"20"}],"\n"]}],["$","span",null,{"className":"code-line highlight-line","children":["  ",["$","span",null,{"className":"token key atrule","children":"script"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line highlight-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," cd frontend\n"]}],["$","span",null,{"className":"code-line highlight-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," npm install\n"]}],["$","span",null,{"className":"code-line highlight-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," npm run lint\n"]}],["$","span",null,{"className":"code-line highlight-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," npm run coverage\n"]}]]}]}],"\n",["$","p",null,{"children":["Ce fichier définit deux jobs ",["$","code",null,{"children":"api test"}]," et ",["$","code",null,{"children":"frontend test"}]," qui exécutent les tests de l'API Spring et du frontend React en parallèle."]}],"\n",["$","p",null,{"children":"Ici, pour le frontend, nous souhaitons d'abord exécuter les tests du linter, puis les tests unitaires pour générer un rapport de couverture de code."}],"\n",["$","p",null,{"children":"Veuillez pousser tous vos modifications sur votre repo distant."}],"\n",["$","h2",null,{"children":"Vérification du pipeline"}],"\n",["$","p",null,{"children":["Après avoir poussé vos modifications, vous devriez voir un nouveau pipeline se déclencher automatiquement à chaque ",["$","em",null,{"children":"push"}]," sur la branche ",["$","code",null,{"children":"chore/setup-frontend-boilerplate"}],"."]}],"\n",["$","p",null,{"children":["Vous devriez voir deux jobs ",["$","code",null,{"children":"api test"}]," et ",["$","code",null,{"children":"frontend test"}]," qui sont exécutés en\nparallèle."]}],"\n",["$","p",null,{"children":["Une fois le pipeline exécuté avec succès, nous pourrions fusionner la branche ",["$","code",null,{"children":"chore/setup-frontend-boilerplate"}]," avec la branche principale."]}],"\n",["$","p",null,{"children":"Mais avant cela, nous souhaitons découvrir un nouveau concept, la notion d'artefacts pour stocker les rapports de tests générés par les jobs du pipeline."}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"comment_sauvegarder_des_rapports_dans_git_lab","children":" Comment sauvegarder des rapports dans GitLab ? "}]}],"\n",["$","h2",null,{"children":"Introduction"}],"\n",["$","p",null,{"children":"Dans un pipeline, il est souvent nécessaire de générer des rapports de tests, de couverture de code, de qualité du code, etc. Ces rapports peuvent être stockés dans GitLab en tant qu'artefacts pour les consulter ultérieurement."}],"\n",["$","p",null,{"children":["Nous allons voir comment sauvegarder les rapports de tests générés par les jobs ",["$","code",null,{"children":"api test"}]," et ",["$","code",null,{"children":"frontend test"}]," dans GitLab."]}],"\n",["$","h2",null,{"children":"Sauvegarde des rapports"}],"\n",["$","p",null,{"children":["Pour sauvegarder les rapports de tests dans GitLab, vous devez utiliser l'option ",["$","code",null,{"children":"artifacts"}]," dans le fichier ",["$","code",null,{"children":".gitlab-ci.yml"}],"."]}],"\n",["$","p",null,{"children":["Voici comment mettre à jour votre fichier ",["$","code",null,{"children":".gitlab-ci.yml"}]," pour sauvegarder les rapports de tests :"]}],"\n",["$","pre",null,{"className":"language-yaml","children":["$","code",null,{"className":"language-yaml code-highlight","children":[["$","span",null,{"className":"code-line line-number","line":"1","children":[["$","span",null,{"className":"token key atrule","children":"api test"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line line-number","line":"2","children":["  ",["$","span",null,{"className":"token key atrule","children":"image"}],["$","span",null,{"className":"token punctuation","children":":"}]," maven",["$","span",null,{"className":"token punctuation","children":":"}],"3.9.9",["$","span",null,{"className":"token punctuation","children":"-"}],"amazoncorretto",["$","span",null,{"className":"token punctuation","children":"-"}],["$","span",null,{"className":"token number","children":"21"}],"\n"]}],["$","span",null,{"className":"code-line line-number","line":"3","children":["  ",["$","span",null,{"className":"token key atrule","children":"script"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line line-number","line":"4","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," cd api\n"]}],["$","span",null,{"className":"code-line line-number","line":"5","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," mvn clean test\n"]}],["$","span",null,{"className":"code-line line-number highlight-line","line":"6","children":["  ",["$","span",null,{"className":"token key atrule","children":"artifacts"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line line-number highlight-line","line":"7","children":["    ",["$","span",null,{"className":"token key atrule","children":"paths"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line line-number highlight-line","line":"8","children":["      ",["$","span",null,{"className":"token punctuation","children":"-"}]," api/target/reports/\n"]}],["$","span",null,{"className":"code-line line-number highlight-line","line":"9","children":["      ",["$","span",null,{"className":"token punctuation","children":"-"}]," api/target/site/\n"]}],["$","span",null,{"className":"code-line line-number highlight-line","line":"10","children":["      ",["$","span",null,{"className":"token punctuation","children":"-"}]," api/target/surefire",["$","span",null,{"className":"token punctuation","children":"-"}],"reports/\n"]}],["$","span",null,{"className":"code-line line-number","line":"11","children":"\n"}],["$","span",null,{"className":"code-line line-number","line":"12","children":[["$","span",null,{"className":"token key atrule","children":"frontend test"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line line-number","line":"13","children":["  ",["$","span",null,{"className":"token key atrule","children":"image"}],["$","span",null,{"className":"token punctuation","children":":"}]," node",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token number","children":"20"}],"\n"]}],["$","span",null,{"className":"code-line line-number","line":"14","children":["  ",["$","span",null,{"className":"token key atrule","children":"script"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line line-number","line":"15","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," cd frontend\n"]}],["$","span",null,{"className":"code-line line-number","line":"16","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," npm install\n"]}],["$","span",null,{"className":"code-line line-number","line":"17","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," npm run lint\n"]}],["$","span",null,{"className":"code-line line-number","line":"18","children":["    ",["$","span",null,{"className":"token punctuation","children":"-"}]," npm run coverage\n"]}],["$","span",null,{"className":"code-line line-number highlight-line","line":"19","children":["  ",["$","span",null,{"className":"token key atrule","children":"artifacts"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line line-number highlight-line","line":"20","children":["    ",["$","span",null,{"className":"token key atrule","children":"paths"}],["$","span",null,{"className":"token punctuation","children":":"}],"\n"]}],["$","span",null,{"className":"code-line line-number highlight-line","line":"21","children":["      ",["$","span",null,{"className":"token punctuation","children":"-"}]," frontend/coverage/\n"]}]]}]}],"\n",["$","p",null,{"children":["Ce fichier définit deux jobs ",["$","code",null,{"children":"api test"}]," et ",["$","code",null,{"children":"frontend test"}]," qui exécutent les tests de l'API Spring et du frontend React en parallèle. Les rapports de tests générés par ces jobs sont sauvegardés dans GitLab en tant qu'artefacts."]}],"\n",["$","p",null,{"children":["Pour l'API Spring, nous sauvegardons les rapports dans les dossiers ",["$","code",null,{"children":"api/target/reports/"}],", ",["$","code",null,{"children":"api/target/site/"}]," et ",["$","code",null,{"children":"api/target/surefire-reports/"}],". Pour le frontend React, nous sauvegardons les rapports dans le dossier ",["$","code",null,{"children":"frontend/coverage/"}],"."]}],"\n",["$","p",null,{"children":["Pour retrouver ces documents dans GitLab, vous pouvez accéder à l'onglet ",["$","code",null,{"children":"Build"}],", ",["$","code",null,{"children":"Pipelines"}]," de votre projet GitLab. Vous devriez voir un pipeline avec les jobs ",["$","code",null,{"children":"api test"}]," et ",["$","code",null,{"children":"frontend test"}]," qui ont été exécutés avec succès."]}],"\n",["$","p",null,{"children":["Si vous cliquez sur le numéro du pipeline, vous pouvez voir les détails de l'exécution du job ",["$","code",null,{"children":"api test"}]," ou ",["$","code",null,{"children":"frontend test"}],".\nEn cliquant sur le job, vous pouvez télécharger ou voir les artefacts générés par le job."]}],"\n",["$","p",null,{"children":["Pour voir les artefacts générés par le job ",["$","code",null,{"children":"api test"}],", vous pouvez cliquer sur le job ",["$","code",null,{"children":"api test"}]," dans le pipeline. Cliquez ensuite sur le bouton ",["$","code",null,{"children":"Browse"}]," pour voir les artefacts générés par le job."]}],"\n",["$","p",null,{"children":["Idem pour le job ",["$","code",null,{"children":"frontend test"}],". Allez dans le pipeline, cliquez sur le job ",["$","code",null,{"children":"frontend test"}]," et cliquez sur le bouton ",["$","code",null,{"children":"Browse"}]," pour voir les artefacts générés par le job."]}],"\n",["$","h2",null,{"children":"Intégration des changements dans la branche principale"}],"\n",["$","p",null,{"children":["Maintenant que vous avez ajouté les artefacts dans votre pipeline, vous pouvez fusionner la branche ",["$","code",null,{"children":"chore/setup-frontend-boilerplate"}]," avec la branche principale."]}],"\n",["$","p",null,{"children":["Pour cela, vous devez créer une ",["$","em",null,{"children":"merge request"}]," pour fusionner la branche ",["$","code",null,{"children":"chore/setup-frontend-boilerplate"}]," avec la branche principale. Une fois la ",["$","em",null,{"children":"merge request"}]," approuvée, vous pouvez cliquer sur le bouton ",["$","code",null,{"children":"Merge"}]," pour fusionner la branche ",["$","code",null,{"children":"chore/setup-frontend-boilerplate"}]," avec la branche principale."]}],"\n",["$","p",null,{"children":"N'oubliez pas de mettre à jour votre branche principale sur votre machine locale après la fusion."}],"\n",["$","h1",null,{"children":["$","a",null,{"id":"est_ce_que_lintegration_continue_est_vraiment_utile","children":" Est-ce que l'intégration continue est vraiment utile ? "}]}],"\n",["$","h2",null,{"children":"Intro"}],"\n",["$","p",null,{"children":"Imaginons que quelqu'un vient à changer le code du frontend ou de l'API. Il est possible que ces changements affectent le bon fonctionnement de l'application."}],"\n",["$","p",null,{"children":"L'intégration continue permet de détecter ces problèmes le plus tôt possible, en exécutant automatiquement les tests et en vérifiant la qualité du code à chaque modification du code."}],"\n",["$","p",null,{"children":"Pour ce tutoriel, veuillez créer un souci au niveau du frontend."}],"\n",["$","h2",null,{"children":"Création d'un souci au niveau du frontend"}],"\n",["$","p",null,{"children":["Vous savez qu'il est impossible de faire un ",["$","code",null,{"children":"push"}]," directement sur la branche principale. Vous devez passer par une ",["$","em",null,{"children":"merge request"}],"."]}],"\n",["$","p",null,{"children":["Veuillez donc créer une nouvelle branche au niveau du frontend que nous allons appeler ",["$","code",null,{"children":"feature/update-login-page"}],"."]}],"\n",["$","p",null,{"children":["Veuillez mettre à jour le fichier ",["$","code",null,{"children":"src/components/pages/LoginPage.tsx"}]," pour changer la couleur du formulaire de connexion (de 'secondary.light' vers \"primary.light\")."]}],"\n",["$","pre",null,{"className":"language-tsx","children":["$","code",null,{"className":"language-tsx code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"return"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token punctuation","children":"<"}],["$","span",null,{"className":"token class-name","children":"Box"}]]}],"\n"]}]]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["      ",["$","span",null,{"className":"token attr-name","children":"sx"}],["$","span",null,{"className":"token script language-javascript","children":[["$","span",null,{"className":"token script-punctuation punctuation","children":"="}],["$","span",null,{"className":"token punctuation","children":"{"}],["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}]]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        margin",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"2"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        padding",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"3"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line highlight-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        backgroundColor",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token string","children":"\"primary.light\""}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        borderRadius",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"4"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        boxShadow",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"2"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token script language-javascript","children":["      ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":"}"}]]}],"\n"]}]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token tag","children":["    ",["$","span",null,{"className":"token punctuation","children":">"}]]}],["$","span",null,{"className":"token plain-text","children":"\n"}]]}]]}]}],"\n",["$","p",null,{"children":["Faite un ",["$","code",null,{"children":"commit"}]," et un ",["$","code",null,{"children":"push"}]," sur votre branche ",["$","code",null,{"children":"feature/update-login-page"}],"."]}],"\n",["$","h2",null,{"children":"Vérification du pipeline"}],"\n",["$","p",null,{"children":["Après avoir poussé vos modifications, vous devriez voir un nouveau pipeline se déclencher automatiquement à chaque ",["$","em",null,{"children":"push"}]," sur la branche ",["$","code",null,{"children":"feature/update-login-page"}],"."]}],"\n",["$","p",null,{"children":["Vous devriez voir deux jobs ",["$","code",null,{"children":"api test"}]," et ",["$","code",null,{"children":"frontend test"}]," qui sont exécutés en parallèle."]}],"\n",["$","p",null,{"children":["Et finalement, vous devriez voir que le job ",["$","code",null,{"children":"frontend test"}]," a échoué. En cliquant sur le job ",["$","code",null,{"children":"frontend test"}],", vous pouvez voir les détails de l'échec.\nVoici le message d'erreur que vous devriez voir :"]}],"\n",["$","pre",null,{"className":"language-txt","children":["$","code",null,{"className":"language-txt code-highlight","children":[["$","span",null,{"className":"code-line","children":"eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0\n"}],["$","span",null,{"className":"code-line","children":"/builds/e-vinci/cae-projects/2025-cae-projects/cae-xy/frontend/src/components/pages/LoginPage.tsx\n"}],["$","span",null,{"className":"code-line","children":"  40:26  error  Replace `\"primary.light\"` with `'primary.light'`  prettier/prettier\n"}],["$","span",null,{"className":"code-line","children":"✖ 1 problem (1 error, 0 warnings)\n"}],["$","span",null,{"className":"code-line","children":"  1 error and 0 warnings potentially fixable with the `--fix` option.\n"}]]}]}],"\n",["$","p",null,{"children":["On voit ici que le linter ESLint a détecté une erreur dans le fichier ",["$","code",null,{"children":"src/components/pages/LoginPage.tsx"}],". Nous avons utilisé des guillemets doubles au lieu de simples pour la couleur du formulaire de connexion !!!"]}],"\n",["$","h2",null,{"children":"Correction de l'erreur"}],"\n",["$","p",null,{"children":["Pour corriger cette erreur, vous devez mettre à jour le fichier ",["$","code",null,{"children":"src/components/pages/LoginPage.tsx"}]," pour changer la couleur du formulaire de connexion de ",["$","code",null,{"children":"\"primary.light\""}]," vers ",["$","code",null,{"children":"'primary.light'"}],"."]}],"\n",["$","pre",null,{"className":"language-tsx","children":["$","code",null,{"className":"language-tsx code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"return"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token punctuation","children":"<"}],["$","span",null,{"className":"token class-name","children":"Box"}]]}],"\n"]}]]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["      ",["$","span",null,{"className":"token attr-name","children":"sx"}],["$","span",null,{"className":"token script language-javascript","children":[["$","span",null,{"className":"token script-punctuation punctuation","children":"="}],["$","span",null,{"className":"token punctuation","children":"{"}],["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}]]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        margin",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"2"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        padding",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"3"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line highlight-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        backgroundColor",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token string","children":"'primary.light'"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        borderRadius",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"4"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":["$","span",null,{"className":"token script language-javascript","children":["        boxShadow",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token number","children":"2"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}]}]}],["$","span",null,{"className":"code-line","children":["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token script language-javascript","children":["      ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":"}"}]]}],"\n"]}]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token tag","children":["    ",["$","span",null,{"className":"token punctuation","children":">"}]]}],["$","span",null,{"className":"token plain-text","children":"\n"}]]}]]}]}],"\n",["$","p",null,{"children":["Faite un ",["$","code",null,{"children":"commit"}]," et un ",["$","code",null,{"children":"push"}]," sur votre branche ",["$","code",null,{"children":"feature/update-login-page"}],"."]}],"\n",["$","p",null,{"children":["Cette fois-ci, le job ",["$","code",null,{"children":"frontend test"}]," devrait être exécuté avec succès ! 🎉"]}],"\n",["$","p",null,{"children":["Si nécessaire, vous pouvez trouver le code associé à l'intégration continue ici : ",["$","a",null,{"href":"https://github.com/e-vinci/cae-theory-demos/tree/main/ci","children":"ci"}],"."]}]]
f:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
d:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"CI"}]]
b:null
